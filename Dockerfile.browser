# Use debian:stable-slim as the base image
FROM debian:stable-slim

# Set environment variables for non-interactive apt-get operations
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies and Google Chrome
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    unzip \
    fonts-liberation \
    lsb-release \
    xdg-utils \
    ca-certificates \
    wget \
    libgdk-pixbuf-2.0-0 \
    --no-install-recommends \
    && curl -fsSL https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg \
    && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update \
    && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && dpkg -i google-chrome-stable_current_amd64.deb || apt-get install -f -y \
    && rm -rf /var/lib/apt/lists/* google-chrome-stable_current_amd64.deb

# Install Python and pip, and create a virtual environment
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    && rm -rf /var/lib/apt/lists/*

# Create and activate a virtual environment
ENV VIRTUAL_ENV=/app/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install Python dependencies
COPY requirements-browser.txt .
RUN pip install --no-cache-dir -r requirements-browser.txt

# Copy the application code
COPY browser_server.py /app/
COPY requirements-browser.txt /app/
COPY setup.py /app/
COPY gpt_oss_mcp_server /app/gpt_oss_mcp_server
WORKDIR /app

# Install the local package in development mode
RUN pip install -e .

# Create a non-root user and switch to it
RUN useradd -m -u 1000 aios
USER aios

# Expose the port the browser server runs on
EXPOSE 8000

# Command to run the browser server
CMD ["python3", "/app/browser_server.py"]
